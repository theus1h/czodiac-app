import React from "react"
import Card from "@components/Card"
import Search from "@components/Input/Search"
import MainLayout from "@components/Layout/Main"
import Stepper from "@components/Stepper"
import Switch from "@components/Switch"
import Select from "@components/Select"
import * as Table from "@components/Table"
import ButtonSwitch from "@components/Switch/ButtonSwitch"
import useCZPools from "@hooks/useCZPools"
import Head from "next/head"
import Image from "next/image"
import Button from "@components/Button"
import CZodiacLogo from "assets/czodiac-logo.png"
import { Add, ArrowDropDown, ArrowDropUp, Clock, ExternalLink, Remove } from "@components/Icons"

const POOL_STEPS = ["Buy CZF", "Stake CZF", "Earn tokens"]

const sortOptions = [{ label: "LP" }, { label: "APR" }, { label: "Liquidity" }]

const defaultHeaders = [
  {
    name: "pair",
    label: "",
    isSortable: false,
    render: () => <Button className="bg-accent-100 text-accent-500">HOT</Button>,
  },
  { name: "token", label: "Token", isSortable: true, render: undefined },
  { name: "apr", label: "APR", isSortable: true, render: undefined },
  { name: "liquidity", label: "Liquidity", isSortable: true, render: undefined },
  { name: "earned", label: "Earned", isSortable: true, render: undefined },
  { name: "other", label: "", isSortable: false, render: undefined },
]

const tokens = ["BELT", "BRY", "BNB", "GHD"]

export default function Page() {
  const { pools } = useCZPools()
  const [sortOption, setSortOption] = React.useState()
  const [rowsExpanded, setRowsExpanded] = React.useState({})
  const [sortColumn, setSortColumn] = React.useState()

  const rows = tokens
    .map((token) => {
      const randAPR = (Math.random() * 100).toFixed(2)
      const randTVL = (Math.random() * 1000000).toFixed(2)
      const randEarned = (Math.random() * 10000).toFixed(2)
      return [
        {
          name: "pair",
          align: "center",
          value: token,
          render: () => (
            <span className="font-semibold text-subheader text-black-neutral-1000">{`CZF -> ${token}`}</span>
          ),
        },
        {
          name: "token",
          value: token,
          align: "center",
          render: () => <span className="font-semibold text-subheader text-black-neutral-1000">{`${token}`}</span>,
        },
        {
          name: "apr",
          value: randAPR,
          align: "left",
          render: () => <span className="font-semibold text-subheader text-black-neutral-1000">{`${randAPR}%`}</span>,
        },
        {
          name: "liquidity",
          value: randTVL,
          align: "left",
          render: () => <span className="font-semibold text-subheader text-black-neutral-1000">{`$${randTVL}`}</span>,
        },
        {
          name: "earned",
          value: randEarned,
          align: "left",
          render: () => <span className="font-semibold text-subheader text-accent-400">{randEarned}</span>,
        },
        { name: "other", render: () => <Button rightIcon={<ArrowDropUp />}>Hide</Button> },
      ]
    })
    .map((row, index) => {
      const newRow = [...row]

      newRow[row.length - 1].render = () => (
        <Button
          rightIcon={rowsExpanded[index] ? <ArrowDropUp /> : <ArrowDropDown />}
          onClick={() => setRowsExpanded((prev) => ({ ...prev, [index]: !prev[index] }))}
        >
          {rowsExpanded[index] ? "Hide" : "Show More"}
        </Button>
      )
      return newRow
    })

  rows.sort((a, b) => a.find((e) => e.name === sortColumn)?.value > b.find((e) => e.name === sortColumn)?.value)

  console.log({ pools })
  return (
    <div className="flex flex-col space-y-6">
      <Head>
        <title>CZodiac - Pools</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <Card className="flex flex-col justify-center text-center p-7">
        <h1 className="font-bold text-title">CZ Pools</h1>
        <h2 className="font-semibold text-header">Stake CZF to earn partnered tokens</h2>
        <div className="w-3/5 mx-auto my-6">
          <Stepper steps={POOL_STEPS} />
        </div>
      </Card>

      <Card className="flex items-center justify-around w-full p-8 space-x-6">
        <Search />
        <Switch label="Staked Only" />
        <ButtonSwitch labels={["Live", "Finished"]} />
        <Select options={sortOptions} label="Sort by" onChange={setSortOption} value={sortOption} />
      </Card>

      <Card className="w-full">
        <Table.Root>
          <Table.Head headers={defaultHeaders} sortBy={setSortColumn}></Table.Head>
          <Table.Body>
            {rows.map((row, idx) => (
              <Table.Row key={idx} index={idx} columns={row} expanded={rowsExpanded[idx]} className="flex space-x-6">
                <div className="flex items-center flex-1">
                  <div className="flex flex-col space-y-2 text-black-neutral-1000">
                    <div>
                      <span className="mr-2 text-body">Ends in: 292929 blocks</span>
                      <Clock className="inline-block" />
                    </div>
                    <div>
                      <span className="mr-2 text-body">See Token Info</span>
                      <ExternalLink className="inline-block" />
                    </div>
                    <div>
                      <span className="mr-2 text-body">View Contract</span>
                      <ExternalLink className="inline-block" />
                    </div>
                  </div>
                </div>
                <div className="flex-1 p-4 text-center border bg-accent-50 border-accent-200 rounded-2xl">
                  <div className="text-body text-black-neutral-1000">LP Staked</div>
                  <div className="flex items-center justify-center">
                    <span className="mr-2 font-semibold text-input1 text-black-neutral-1000">0.00000</span>
                    <Image src={CZodiacLogo} alt="CZodiac" width={24} height={24} />
                  </div>
                  <div className="mt-4 space-x-2">
                    <Button className="border border-accent-200 text-accent-500" rightIcon={<Add />}>
                      Add Stake
                    </Button>
                    <Button className="border border-accent-200 text-accent-500" disabled rightIcon={<Remove />}>
                      Unstake
                    </Button>
                  </div>
                </div>
                <div className="flex-1 p-4 text-center border bg-accent-50 border-accent-200 rounded-2xl">
                  <div className="text-body text-black-neutral-1000">Earned</div>
                  <div className="flex items-center justify-center">
                    <span className="mr-2 font-semibold text-input1 text-black-neutral-1000">0.00000</span>
                    <Image src={CZodiacLogo} alt="CZodiac" width={24} height={24} />
                  </div>
                  <div className="mt-4">
                    <Button className="w-full border border-accent-200 text-accent-500" disabled>
                      Harvest
                    </Button>
                  </div>
                </div>
              </Table.Row>
            ))}
          </Table.Body>
        </Table.Root>
      </Card>
    </div>
  )
}

Page.getLayout = function getLayout(page) {
  return <MainLayout>{page}</MainLayout>
}
